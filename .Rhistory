nobs
source("complete.R")
nobs
CSVdata
source("complete.R")
complete("specdata", 1:2)
complete("specdata", 2)
complete("specdata", 1:2)
source("complete.R")
complete("specdata", 1:2)
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- data.frame()
nobs <- NULL
for (i in 1:2) {
CSVdata <- rbind(CSVdata, read.csv(file_list[i]))
mySum <- sum(complete.cases(CSVdata))
nobs <- c(nobs, mySum)
}
CSVdata
nobs
mySum
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- data.frame()
nobs <- data.frame()
for (i in 1:2) {
CSVdata <- rbind(CSVdata, read.csv(file_list[i]))
mySum <- sum(complete.cases(CSVdata))
nobs <- c(nobs, mySum)
}
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- data.frame()
nobs <- data.frame()
for (i in 1:2) {
CSVdata <- rbind(CSVdata, read.csv(file_list[i]))
mySum <- sum(complete.cases(CSVdata))
nobs <- c(nobs, mySum)
}
nobs
nrro(CSVdata)
nrow(CSVdata)
CSVdata
source("complete.R")
source("complete.R")
complete("specdata", 1:2)
complete("specdata", 1)
complete("specdata", 30:25)
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
nrow(cleaned)
source("complete.R")
nrow(cleaned)
complete("specdata", 30:25)
nrow(cleaned)
source("complete.R")
complete("specdata", 30:25)
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
source("complete.R")
complete("specdata", 30:25)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1
)
complete("specdata", 3)
submit()
submit()
submit()
cube <- function(X, n) {
x^3
}
cube(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
x <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
y
search()
x <- 1:10
if(x > 5) {
x <- 0
}
x
x <- 0
x
length(x)
x
x <- 1:10
length(10)
length(x)
?if
_
airquality
cor(airquality)
cor(CSVdata)
file_list <- dir(directory, full.names = TRUE)
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- read.csv(file_list[i])
CSVdata
cor(CSVdata)
cor(CSVdata[ ,2], CSVdata[ ,3])
(CSVdata[ ,2]
)
complete.case(CSVdata[ ,2])
x <- (CSVdata[ ,2])
x
x <- (CSVdata[ ,2])
x <- complete.case(CSVdata)
cleaned <- complete.case(CSVdata)
cleaned <- complete.case(CSVdata)
cleaned
x <- (cleaned[, 2])
x
y <- (cleaned[, 3])
cor (x, y)
cr <- cor(x, y)
head(cr)
head(cr)
cr <- cor(x, y, method="Pearsman")
cr <- cor(x, y, method = "kendall")
cr
cr <- cor(x, y, method = "spearman")
cr
?cor
airquality
airquality[,$Ozone]
airquality$Ozone]
airquality$Ozone
x <- airquality$Ozone
y <- airquality$Wind
cor(x, y, na.rm = TRUE)
cor(x, y, na.rm)
cor(x, y)
cor(x, y, na.rm = TRUE)
cor(x, y)
x
y <- (airquality$Wind, na.rm = TRUE)
y <- (airquality[ , 3], na.rm = TRUE)
y <- airquality[ , 3], na.rm = TRUE
y <- airquality[ , 3]
y <- complete.case(airquality[ , 3])
cleaned <- complete.case(airquality)
y <- complete.cases(airquality[ , 3])
x <- complete.cases(airquality[ , 2])
cor (y, x)
cor (x, y)
airquality
x <- complete.cases(airquality[ , 1])
y <- complete.cases(airquality[ , 4])
cor (x, y)
cor (x, y)
cor(x, y)
x
cor(x, y)
y <- complete.cases(airquality[ , 4])
test1 <- airquality[y]
test1 <- airquality(y)
test1 <- y(airquality)
test1 <- airquality(y)
y
cleaned <- complete.cases(airquality)
cleaned
airquality
cleaned <- complete.cases(airquality)
cleaned
airquality(cleaned)
cc <- airquality(cleaned)
cleaned(airquality)
airquality[cleaned]
airquality[cleaned]
good <- complete.cased(airquality)
good <- complete.cases(airquality)
airquality[good]
airquality
airquality[good]
good
airquality&Ozone[good]
airquality$Ozone[good]
x <- airquality$Ozone[good]
y <- airquality$Wind[good]
cor(x, y)
cr <- cor(x, y)
head(cr)
summary(cr)
source("corr.R")
source("completed.R")
source("complete.R")
cor(0, 0)
source("corr.R")
source("corr.R")
corr("specdata", 100)
source("corr.R")
corr("specdata", 100)
source("corr.R")
corr("specdata", 100)
source("corr.R")
corr("specdata", 100)
total
nrow(total)
nrow(cleaned)
cleaned
CSVdata(cleaned)
source("corr.R")
corr("specdata", 100)
source("corr.R")
corr("specdata", 100)
source("corr.R")
corr("specdata", 100)
var(1:10)
var(1:10)
cor(1:10, 2:11)
cr <- cor(1:10, 2:11)
head(cr)
summary(cr)
head
?head
length()
?length
?nrow()
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
total <- sum(complete.cases(CSVdata))
print(total)
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
total <- sum(complete.cases(CSVdata))
print(total)
file_list <- dir(directory, full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
total <- sum(complete.cases(CSVdata))
print(total)
file_list <- dir(directory, full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
total <- sum(complete.cases(CSVdata))
print(total)
file_list <- dir("specdata", full.names = TRUE)
file_list
CSVdata <- rbind(CSVdata, read.csv(file_list))
CSVdata <- rbind(read.csv(file_list))
CSVdata <- cbind(read.csv(file_list))
CSVdata <- (read.csv(file_list))
CSVdata <- (read.csv(file_list))
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
total <- sum(complete.cases(CSVdata))
}
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
total <- sum(complete.cases(CSVdata))
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- rbind(CSVdata, read.csv(file_list))
CSVdata <- rbind(CSVdata, read.csv(file_list))
CSVdata <- read.csv(file_list)
CSVdata <- read.csv(file_list[1:32])
file_list[1:32]
file_list[1:332]
CSVdata <- read.csv(file_list[1:32])
CSVdata = data.frame()
file_list <- dir(directory, full.names = TRUE)
for (i in 1:332) {
CSVdata <- rbind(CSVdata, read.csv(file_list[i]))
total <- sum(complete.cases(CSVdata))
}
CSVdata = data.frame()
file_list <- dir("specdata", full.names = TRUE)
for (i in 1:332) {
CSVdata <- rbind(CSVdata, read.csv(file_list[i]))
total <- sum(complete.cases(CSVdata))
}
`
file_list <- dir("specdata", full.names = TRUE)
CSVdata = data.frame()
for (i in 1:332) {
CSVdata <- rbind(CSVdata, read.csv(file_list[i]))
total <- sum(complete.cases(CSVdata))
}
source("complete.R")
complete("specdata", 1:332)
getwd()
dir()
complete("specdata", 1:332)
complete("specdata", 1:10)
complete("specdata", 100)
complete("specdata", 500)
csvdata
complete("specdata", 500)
complete("specdata", id = 1:332)
if (nobs >= threshold)
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- data.frame()
nobs <- NULL
for (i in 1:10) {
CSVdata <- read.csv(file_list[i])
total <- sum(complete.cases(CSVdata))
nobs <- c(nobs, total)
}
final <- data.frame(id, nobs)
print(final)
}
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- data.frame()
nobs <- NULL
for (i in id) {
CSVdata <- read.csv(file_list[i])
total <- sum(complete.cases(CSVdata))
nobs <- c(nobs, total)
}
final <- data.frame(id, nobs)
print(final)
}
nobs
file_list <- dir("specdata", full.names = TRUE)
CSVdata <- data.frame()
nobs <- NULL
for (i in 1:332) {
CSVdata <- read.csv(file_list[i])
total <- sum(complete.cases(CSVdata))
nobs <- c(nobs, total)
}
final <- data.frame(id, nobs)
print(final)
}
source("corr.R")
corr("specdata", 400)
corr("specdata", 100)
corr("specdata", 100)
corr("specdata", 100)
corr("specdata", 100)
corr("specdata")
corr("specdata", 100)
corr("specdata", 5000)
CSVdata
source("corr.R")
corr("specdata", 5000)
corr("specdata", 100)
nobs
corr("specdata")
corr("specdata", 0)
total
corr("specdata", 150)
nobs
total
corr("specdata", 400)
total
nobs
nobs
corr("specdata")
corr("specdata", -1)
corr("specdata")
source("corr.R")
corr("specdata", -1)
corr("specdata", 400)
corr("specdata", 150)
c(nobs, total)
source("completed.R"")
source("complete.R"")
source("complete.R")
source("complete.R")
source("specdata", 100)
complete("specdata", 100)
complete("specdata", 400)
complete("specdata", 332)
nobs
complete("specdata", 2)
complete("specdata", 1:10)
complete("specdata", 150)
complete("specdata", 0)
complete("specdata", 0)
x <- 1:0
x
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata", 0)
corr("specdata", 100)
1:10
1:10
c <- 1:100
c
c <- 200
iris
tapply(iris$Sepal.Length, virginica, mean)
tapply(iris$Sepal.Length, iris$virginica, mean)
tapply(iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, "virginica", mean)
tapply(iris$virginica, , mean)
tapply(iris$virginica, Sepal.Length, mean)
tapply(iris$virginica, iris$Sepal.Length, mean)
tapply(iris$virginica, "Sepal.Length", mean)
tapply(iris$virginica, iris[,"Sepal.Length"], mean)
tapply(iris$virginica, mean)
tapply(iris$virginica, mean)
tapply(iris$virginica, 3, mean)
tapply(iris$Sepal.Length, 3, mean)
tapply(iris$Sepal.Length, , mean)
tapply(iris$Sepal.Length, , mean)
?tapply
tapply(iris$virginica, , mean)
tapply(iris$virginica, iris$Sepal.Length, mean)
tapply(iris$Petal.Length, iris$Sepal.Length, mean)
tapply(iris$Petal.Length, mean)
tapply(iris$Sepal.Length, mean)
tapply(iris$Petal.Length, Species, mean)
tapply(iris$Petal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
x <- tapply(iris$Sepal.Length, iris$Species, mean)
x
class (x)
Sentosa
setosa
tapply(iris[1:4], iris$Species, mean)
tapply(irisc(1:4), iris$Species, mean)
tapply(c(1:4), iris$Species, mean)
tapply(iris(1,4), iris$Species, mean)
tapply(iris[1,4], iris$Species, mean)
iris
iris[,4]
iris[,]
iris[,c(1:4)]
tapply(iris[,c(1:4)], iris$verginica, mean)
tapply(iris[,c(1:4)], iris$verginica, mean)
x <- iris[,c(1:4)]
tapply(x, iris$verginica, mean)
iris$Petal.Length
tapply(iris$Petal.Length, iris$verginica, mean)
x <- tapply(iris$Sepal.Length, iris$Species, mean)
x
x <- tapply(iris$Sepal.Length, iris$Species, mean)
iris$Sepal.Length
x <- tapply(iris$Sepal.Length, iris$Species, max)
x
x <- tapply(iris$Sepal.Length, iris$Species, min)
x
x <- tapply(iris$Sepal.Length, iris$Petal.Length , iris$Species, min)
x <- tapply(iris$Petal.Length , iris$Species, min)
x
## Caching the Inverse of a Matrix
setwd("C:/Users/julio/ProgrammingAssignment2")
source(cachematrix.R)
source("cachematrix.R")
a$makeCacheMatrix
a$makeCacheMatrix(2:1)
a$makeCacheMatrix(2:1, 2)
a$makeCacheMatrix(2:1, 2)
a<-makeCacheMatrix()
a$set(matrix(1:4,2,2)
a$set(matrix(1:4,2,2))
a$set(matrix(1:4,2,2))
a
a
cacheSolve(a)
a$set(matrix(1:4,2,2))
a
X <- a$set(matrix(1:4,2,2))
x
n <- a$set(matrix(1:4,2,2))
n
matrix(1:4,2,2)
X <- matrix(1:4,2,2)
x
n <- matrix(1:4,2,2)
n
cachesolve(n)
makeCacheMatric(matrix(1:4,2,2))
n <- makeCacheMatric(matrix(1:4,2,2))
n <- makeCacheMatrix(matrix(1:4,2,2))
n
n <- makeCacheMatrix(matrix(1:4,2,2))
d <- makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(d)
